// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`integration:combinators/node > parser sample 0 1`] = `
root[1] (1:1-1:34, 0-33)
└─0 expressionStatement[1] (1:1-1:34, 0-33)
    └─0 arithmeticExpression[2] (1:1-1:34, 0-33)
        │ operator: "*"
        ├─0 arithmeticExpression[2] (1:1-1:27, 0-26)
        │   │ operator: "/"
        │   ├─0 parenthesizedExpression[1] (1:1-1:21, 0-20)
        │   │   └─0 arithmeticExpression[2] (1:2-1:20, 1-19)
        │   │       │ operator: "+"
        │   │       ├─0 arithmeticExpression[2] (1:2-1:9, 1-8)
        │   │       │   │ operator: "-"
        │   │       │   ├─0 number 3.5 (1:2-1:5, 1-4)
        │   │       │   │     raw: "3.5"
        │   │       │   └─1 number 5 (1:8-1:9, 7-8)
        │   │       │         raw: "5"
        │   │       └─1 parenthesizedExpression[1] (1:12-1:20, 11-19)
        │   │           └─0 arithmeticExpression[2] (1:13-1:19, 12-18)
        │   │               │ operator: "**"
        │   │               ├─0 number 2 (1:13-1:14, 12-13)
        │   │               │     raw: "2"
        │   │               └─1 number 2 (1:18-1:19, 17-18)
        │   │                     raw: "2"
        │   └─1 number 0.1 (1:24-1:27, 23-26)
        │         raw: ".10"
        └─1 boolean true (1:30-1:34, 29-33)
`;

exports[`integration:combinators/node > parser sample 1 1`] = `
root[1] (1:1-1:49, 0-48)
└─0 expressionStatement[1] (1:1-1:49, 0-48)
    └─0 templateLiteral[5] (1:1-1:49, 0-48)
        ├─0 templateElement "fifteen is \\\\\`" (1:2-1:15, 1-14)
        ├─1 templatePlaceholder[1] (1:15-1:23, 14-22)
        │   │ typeOnly: false
        │   └─0 arithmeticExpression[2] (1:17-1:22, 16-21)
        │       │ operator: "+"
        │       ├─0 identifier<a> (1:17-1:18, 16-17)
        │       └─1 identifier<b> (1:21-1:22, 20-21)
        ├─2 templateElement "\\\\\`, not \\\\\`" (1:23-1:33, 22-32)
        ├─3 templatePlaceholder[1] (1:33-1:45, 32-44)
        │   │ typeOnly: false
        │   └─0 arithmeticExpression[2] (1:35-1:44, 34-43)
        │       │ operator: "+"
        │       ├─0 arithmeticExpression[2] (1:35-1:40, 34-39)
        │       │   │ operator: "*"
        │       │   ├─0 number 2 (1:35-1:36, 34-35)
        │       │   │     raw: "2"
        │       │   └─1 identifier<a> (1:39-1:40, 38-39)
        │       └─1 identifier<b> (1:43-1:44, 42-43)
        └─4 templateElement "\\\\\`." (1:45-1:48, 44-47)
`;

exports[`integration:combinators/node > parser sample 2 1`] = `
root[7] (1:1-1:57, 0-56)
├─0 expressionStatement[1] (1:1-1:5, 0-4)
│   └─0 bigint 13n (1:1-1:5, 0-4)
│         raw: "0xdn"
├─1 expressionStatement[1] (1:6-1:11, 5-10)
│   └─0 boolean false (1:6-1:11, 5-10)
├─2 expressionStatement[1] (1:12-1:16, 11-15)
│   └─0 null null (1:12-1:16, 11-15)
├─3 expressionStatement[1] (1:17-1:18, 16-17)
│   └─0 number 3 (1:17-1:18, 16-17)
│         raw: "3"
├─4 expressionStatement[1] (1:19-1:39, 18-38)
│   └─0 regexp "/(?<=(?<a>\\\\w){3})f/u" (1:19-1:39, 18-38)
│         flags: "u"
│         pattern: "(?<=(?<a>\\\\w){3})f"
├─5 expressionStatement[1] (1:40-1:47, 39-46)
│   └─0 string "hello" (1:40-1:47, 39-46)
│         raw: "\\"hello\\""
└─6 expressionStatement[1] (1:48-1:57, 47-56)
    └─0 undefined undefined (1:48-1:57, 47-56)
`;
